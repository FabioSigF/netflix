{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cliente\\\\Desktop\\\\ESTUDOS\\\\REACT\\\\PROJETOS\\\\Netflix\\\\netflix\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'; //Components\n\nimport Home from './pages/Home';\nimport Tmdb from \"./Tmdb.js\";\nimport Accounts from \"./pages/Accounts\";\nimport Initial from \"./pages/Inicial\";\nimport Login from \"./pages/Login\";\nimport NewClient from \"./pages/NewClient\";\nimport CreatePassword from \"./pages/NewClient/CreatePassword\";\nimport ConfigCard from \"./pages/NewClient/ConfigCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [featureData, setFeatureData] = useState(null);\n  const [movieList, setMovieList] = useState([]); //Função para captar o tamanho da tela e enviar ao state\n\n  function handleResize() {\n    setWindowWidth(window.innerWidth);\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    const loadAll = async () => {\n      // Pegando a lista Total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list); //Pegando o feature\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeatureData(chosenInfo);\n    };\n\n    loadAll();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  const users = [{\n    name: 'Fábio',\n    icon: 'user1',\n    link: '/home'\n  }, {\n    name: 'Felipe',\n    icon: 'user4',\n    link: '/home'\n  }, {\n    name: 'Silvana',\n    icon: 'user9',\n    link: '/home'\n  }, {\n    name: 'Isabella',\n    icon: 'user7',\n    link: '/home'\n  }];\n  const [loggedUser, setLoggedUser] = useState('user1');\n\n  function toggleAccount(e) {\n    const imgAccount = e.target.id;\n    imgAccount.length > 0 && setLoggedUser(imgAccount);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Accounts, {\n          users: users,\n          toggleAccount: toggleAccount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          windowWidth: windowWidth,\n          movieList: movieList,\n          featureData: featureData,\n          loggedUser: loggedUser,\n          users: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/initial\",\n        element: /*#__PURE__*/_jsxDEV(Initial, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/new-client\",\n        element: /*#__PURE__*/_jsxDEV(NewClient, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 44\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/new-client/config\",\n          element: /*#__PURE__*/_jsxDEV(ConfigCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/new-client/password\",\n          element: /*#__PURE__*/_jsxDEV(CreatePassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HoEoJe5FTWzpUfKoywJCUyoSh3k=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Cliente/Desktop/ESTUDOS/REACT/PROJETOS/Netflix/netflix/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Home","Tmdb","Accounts","Initial","Login","NewClient","CreatePassword","ConfigCard","App","windowWidth","setWindowWidth","window","innerWidth","featureData","setFeatureData","movieList","setMovieList","handleResize","addEventListener","loadAll","list","getHomeList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","removeEventListener","users","name","icon","link","loggedUser","setLoggedUser","toggleAccount","e","imgAccount","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n//Components\nimport Home from './pages/Home'\nimport Tmdb from \"./Tmdb.js\";\nimport Accounts from \"./pages/Accounts\";\nimport Initial from \"./pages/Inicial\";\nimport Login from \"./pages/Login\";\nimport NewClient from \"./pages/NewClient\";\nimport CreatePassword from \"./pages/NewClient/CreatePassword\";\nimport ConfigCard from \"./pages/NewClient/ConfigCard\";\n\n\nexport default function App() {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [featureData, setFeatureData] = useState(null);\n  const [movieList, setMovieList] = useState([]);\n\n  //Função para captar o tamanho da tela e enviar ao state\n  function handleResize() {\n    setWindowWidth(window.innerWidth)\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    const loadAll = async () => {\n      // Pegando a lista Total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando o feature\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\n      setFeatureData(chosenInfo);\n    }\n\n    loadAll();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const users = [\n    { name: 'Fábio', icon: 'user1', link: '/home' },\n    { name: 'Felipe', icon: 'user4', link: '/home' },\n    { name: 'Silvana', icon: 'user9', link: '/home' },\n    { name: 'Isabella', icon: 'user7', link: '/home' },\n  ]\n\n  const [loggedUser, setLoggedUser] = useState('user1')\n\n  function toggleAccount(e) {\n    const imgAccount = e.target.id;\n    imgAccount.length > 0 && setLoggedUser(imgAccount)\n  }\n\n  return (\n    <Router>\n\n      <Routes>\n\n        <Route\n          path=\"/\"\n          element={<Accounts users={users} toggleAccount={toggleAccount} />}\n        />\n        <Route\n          path=\"/home\"\n          element={\n            <Home\n              windowWidth={windowWidth}\n              movieList={movieList}\n              featureData={featureData}\n              loggedUser={loggedUser}\n              users={users}\n            />}\n        />\n        <Route path=\"/initial\" element={<Initial />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/new-client\" element={<NewClient />}>\n          <Route\n            path=\"/new-client/config\"\n            element={<ConfigCard/>} />\n          <Route\n            path=\"/new-client/password\"\n            element={\n              <CreatePassword\n              />\n            }\n          />\n        </Route>\n      </Routes>\n\n    </Router>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}