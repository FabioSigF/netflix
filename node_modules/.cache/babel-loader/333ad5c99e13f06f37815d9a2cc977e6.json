{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cliente\\\\Desktop\\\\ESTUDOS\\\\REACT\\\\PROJETOS\\\\Netflix\\\\netflix\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Tmdb from \"./Tmdb.js\";\nimport FeatureMovie from \"./components/FeatureMovie.js\";\nimport MovieRow from \"./components/MovieRow.js\";\nimport Header from \"./components/Header.js\";\nimport \"./Styles/main.css\";\nimport { compileStringAsync } from \"sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n  const [featureData, setFeatureData] = useState(null);\n  useEffect(() => {\n    const loadAll = async () => {\n      // Pegando a lista Total\n      let list = await Tmdb.getHomeList();\n      console.log(list);\n      setMovieList(list); //Pegando items\n\n      movieList.map(item => {}); //Pegando o feature\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeatureData(chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), featureData && /*#__PURE__*/_jsxDEV(FeatureMovie, {\n      item: featureData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(MovieRow, {\n        title: item.title,\n        items: item.items\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Feito com dedica\\xE7\\xE3o por F\\xE1bio Signorini\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Direitos de imagem para Netflix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Dados utilizados do site Themoviedb.org\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8qL0qSgMvkjer2zt/+yOSM7VpIk=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Cliente/Desktop/ESTUDOS/REACT/PROJETOS/Netflix/netflix/src/App.js"],"names":["React","useEffect","useState","Tmdb","FeatureMovie","MovieRow","Header","compileStringAsync","App","movieList","setMovieList","featureData","setFeatureData","loadAll","list","getHomeList","console","log","map","item","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","key","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,mBAAP;AACA,SAASC,kBAAT,QAAmC,MAAnC;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMY,OAAO,GAAG,YAAY;AAC1B;AACA,UAAIC,IAAI,GAAG,MAAMX,IAAI,CAACY,WAAL,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAJ,MAAAA,YAAY,CAACI,IAAD,CAAZ,CAJ0B,CAM1B;;AACAL,MAAAA,SAAS,CAACS,GAAV,CAAeC,IAAD,IAAS,CAEtB,CAFD,EAP0B,CAW1B;;AACA,UAAIC,SAAS,GAAGN,IAAI,CAACO,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,WAA5B,CAAhB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,GAAoC,CAArD,CAAX,CAAnB;AACA,UAAIC,MAAM,GAAGX,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BL,YAA3B,CAAb;AACA,UAAIQ,UAAU,GAAG,MAAM7B,IAAI,CAAC8B,YAAL,CAAkBF,MAAM,CAACG,EAAzB,EAA6B,IAA7B,CAAvB;AACAtB,MAAAA,cAAc,CAACoB,UAAD,CAAd;AACD,KAjBD;;AAmBAnB,IAAAA,OAAO;AACR,GArBQ,EAqBN,EArBM,CAAT;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAGGF,WAAW,iBACV,QAAC,YAAD;AACE,MAAA,IAAI,EAAEA;AADR;AAAA;AAAA;AAAA;AAAA,YAJJ,eASE;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,gBACGF,SAAS,CAACS,GAAV,CAAc,CAACC,IAAD,EAAOgB,GAAP,kBACb,QAAC,QAAD;AAEE,QAAA,KAAK,EAAEhB,IAAI,CAACiB,KAFd;AAGE,QAAA,KAAK,EAAEjB,IAAI,CAACS;AAHd,SACOO,GADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YATF,eAkBE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GArDuB3B,G;;KAAAA,G","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Tmdb from \"./Tmdb.js\";\nimport FeatureMovie from \"./components/FeatureMovie.js\";\nimport MovieRow from \"./components/MovieRow.js\";\nimport Header from \"./components/Header.js\";\nimport \"./Styles/main.css\";\nimport { compileStringAsync } from \"sass\";\nexport default function App() {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featureData, setFeatureData] = useState(null);\n\n  useEffect(()=> {\n    const loadAll = async () => {\n      // Pegando a lista Total\n      let list = await Tmdb.getHomeList();\n      console.log(list)\n      setMovieList(list);\n\n      //Pegando items\n      movieList.map((item) =>{\n        \n      })\n\n      //Pegando o feature\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\n      setFeatureData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n  return (\n    <div className=\"page\">\n      <Header />\n\n      {featureData && \n        <FeatureMovie\n          item={featureData}\n        />\n      }\n      \n      <section className=\"lists\">\n        {movieList.map((item, key)=> (\n          <MovieRow \n            key={key}\n            title={item.title}\n            items={item.items}\n          />\n          ))}\n      </section>\n      <footer className=\"footer\">\n        <p>Feito com dedicação por Fábio Signorini</p>\n        <p>Direitos de imagem para Netflix</p>\n        <p>Dados utilizados do site Themoviedb.org</p>\n      </footer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}