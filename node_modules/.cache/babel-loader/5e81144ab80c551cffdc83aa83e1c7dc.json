{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cliente\\\\Desktop\\\\ESTUDOS\\\\REACT\\\\PROJETOS\\\\Netflix\\\\netflix\\\\src\\\\layout\\\\Home\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport FeatureMovie from \"./components/FeatureMovie\";\nimport MovieRow from \"./components/MovieRow\";\nimport netflixLoading from '../src/imgs/netflix-loading.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [featureData, setFeatureData] = useState(null);\n  useEffect(() => {\n    const loadAll = async () => {\n      // Pegando a lista Total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list); //Pegando o feature\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeatureData(chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [featureData && /*#__PURE__*/_jsxDEV(FeatureMovie, {\n      item: featureData,\n      windowWidth: windowWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(MovieRow, {\n        title: item.title,\n        items: item.items\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Feito com dedica\\xE7\\xE3o por F\\xE1bio Signorini\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Direitos de imagem para Netflix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Dados utilizados do site Themoviedb.org\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), movieList.length <= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: netflixLoading,\n        alt: \"Carregando..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"MwrhcytfsHNLkOwy2+vt8gGfYps=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Cliente/Desktop/ESTUDOS/REACT/PROJETOS/Netflix/netflix/src/layout/Home/index.js"],"names":["useState","useEffect","FeatureMovie","MovieRow","netflixLoading","Home","windowWidth","setWindowWidth","window","innerWidth","featureData","setFeatureData","loadAll","list","Tmdb","getHomeList","setMovieList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","handleResize","addEventListener","removeEventListener","movieList","map","item","key","title"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AACA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACQ,MAAM,CAACC,UAAR,CAA9C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,IAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,OAAO,GAAG,YAAY;AAC1B;AACA,UAAIC,IAAI,GAAG,MAAMC,IAAI,CAACC,WAAL,EAAjB;AACAC,MAAAA,YAAY,CAACH,IAAD,CAAZ,CAH0B,CAK1B;;AACA,UAAII,SAAS,GAAGJ,IAAI,CAACK,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,WAA5B,CAAhB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,GAAoC,CAArD,CAAX,CAAnB;AACA,UAAIC,MAAM,GAAGX,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BL,YAA3B,CAAb;AACA,UAAIQ,UAAU,GAAG,MAAMf,IAAI,CAACgB,YAAL,CAAkBF,MAAM,CAACG,EAAzB,EAA6B,IAA7B,CAAvB;AACApB,MAAAA,cAAc,CAACkB,UAAD,CAAd;AACD,KAXD;;AAaAjB,IAAAA,OAAO;AACR,GAfQ,EAeN,EAfM,CAAT;AAiBAX,EAAAA,SAAS,CAAC,MAAM;AACd,aAAS+B,YAAT,GAAwB;AACtBzB,MAAAA,cAAc,CAACC,MAAM,CAACC,UAAR,CAAd;AACD;;AACDD,IAAAA,MAAM,CAACyB,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMxB,MAAM,CAAC0B,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAA,eACGtB,WAAW,iBACV,QAAC,YAAD;AACE,MAAA,IAAI,EAAEA,WADR;AAEE,MAAA,WAAW,EAAEJ;AAFf;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,gBACG6B,SAAS,CAACC,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,kBACb,QAAC,QAAD;AAEE,QAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,QAAA,KAAK,EAAEF,IAAI,CAACZ;AAHd,SACOa,GADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YARF,eAiBE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,EAuBGH,SAAS,CAACR,MAAV,IAAoB,CAApB,iBACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEvB,cAAV;AAA0B,QAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA,kBADF;AA+BD;;GA7DuBC,I;;KAAAA,I","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport FeatureMovie from \"./components/FeatureMovie\";\r\nimport MovieRow from \"./components/MovieRow\";\r\nimport netflixLoading from '../src/imgs/netflix-loading.gif';\r\nexport default function Home() {\r\n\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [featureData, setFeatureData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadAll = async () => {\r\n      // Pegando a lista Total\r\n      let list = await Tmdb.getHomeList();\r\n      setMovieList(list);\r\n\r\n      //Pegando o feature\r\n      let originals = list.filter(i => i.slug === 'originals');\r\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\r\n      let chosen = originals[0].items.results[randomChosen];\r\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\r\n      setFeatureData(chosenInfo);\r\n    }\r\n\r\n    loadAll();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowWidth(window.innerWidth)\r\n    }\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {featureData &&\r\n        <FeatureMovie\r\n          item={featureData}\r\n          windowWidth={windowWidth}\r\n        />\r\n      }\r\n\r\n      <section className=\"lists\">\r\n        {movieList.map((item, key) => (\r\n          <MovieRow\r\n            key={key}\r\n            title={item.title}\r\n            items={item.items}\r\n          />\r\n        ))}\r\n      </section>\r\n      <footer className=\"footer\">\r\n        <p>Feito com dedicação por Fábio Signorini</p>\r\n        <p>Direitos de imagem para Netflix</p>\r\n        <p>Dados utilizados do site Themoviedb.org</p>\r\n      </footer>\r\n\r\n      {movieList.length <= 0 &&\r\n        <div className=\"loading\">\r\n          <img src={netflixLoading} alt=\"Carregando..\" />\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}