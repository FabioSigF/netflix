{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cliente\\\\Desktop\\\\ESTUDOS\\\\REACT\\\\PROJETOS\\\\Netflix\\\\netflix\\\\src\\\\components\\\\FeatureMovie\\\\index.js\";\nimport React from \"react\";\nimport WatchBtn from \"../WatchBtn\";\nimport MyListBtn from \"../MyListBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FeatureMovie(_ref) {\n  let {\n    item,\n    windowWidth\n  } = _ref;\n  //Seleciona gêneros dos filmes\n  let genres = [];\n\n  for (let i in item.genres) {\n    genres.push(item.genres[i].name);\n  } //Limite de 200 caracteres para descrição do filme\n\n\n  let description = item.overview;\n\n  if (description.length > 200) {\n    description = description.substring(0, 200) + '...';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"featured\",\n    style: {\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"featured__content flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"featured__title\",\n        children: item.name ? item.name : item.original_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"featured__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"featured__points\",\n          children: [item.vote_average, \" pontos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), (item.first_air_date || item.release_date) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"featured__year\",\n          children: item.first_air_date ? new Date(item.first_air_date).getFullYear() : new Date(item.release_date).getFullYear()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), item.number_of_seasons && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"featured__seasons\",\n          children: [item.number_of_seasons, \" temporada\", item.number_of_seasons !== 1 && 's']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"featured__synopsis\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"featured__btns\",\n            children: [/*#__PURE__*/_jsxDEV(WatchBtn, {\n              item: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MyListBtn, {\n              movie: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"featured__genres\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"G\\xEAneros: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), genres.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = FeatureMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeatureMovie\");","map":{"version":3,"sources":["C:/Users/Cliente/Desktop/ESTUDOS/REACT/PROJETOS/Netflix/netflix/src/components/FeatureMovie/index.js"],"names":["React","WatchBtn","MyListBtn","FeatureMovie","item","windowWidth","genres","i","push","name","description","overview","length","substring","backgroundImage","backdrop_path","original_title","vote_average","first_air_date","release_date","Date","getFullYear","number_of_seasons","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AACA,eAAe,SAASC,YAAT,OAA6C;AAAA,MAAvB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAuB;AAE1D;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAT,IAAcH,IAAI,CAACE,MAAnB,EAA2B;AACzBA,IAAAA,MAAM,CAACE,IAAP,CAAYJ,IAAI,CAACE,MAAL,CAAYC,CAAZ,EAAeE,IAA3B;AACD,GANyD,CAS1D;;;AACA,MAAIC,WAAW,GAAGN,IAAI,CAACO,QAAvB;;AACA,MAAID,WAAW,CAACE,MAAZ,GAAqB,GAAzB,EAA8B;AAC5BF,IAAAA,WAAW,GAAGA,WAAW,CAACG,SAAZ,CAAsB,CAAtB,EAAyB,GAAzB,IAAgC,KAA9C;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAC,UAAnB;AAA8B,IAAA,KAAK,EAAE;AACnCC,MAAAA,eAAe,EAAG,0CAAyCV,IAAI,CAACW,aAAc;AAD3C,KAArC;AAAA,2BAGE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBAAiCX,IAAI,CAACK,IAAL,GAAYL,IAAI,CAACK,IAAjB,GAAwBL,IAAI,CAACY;AAA9D;AAAA;AAAA;AAAA;AAAA,cADF,eAGI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,qBAAmCZ,IAAI,CAACa,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,CAACb,IAAI,CAACc,cAAL,IAAuBd,IAAI,CAACe,YAA7B,kBACC;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBAAiCf,IAAI,CAACc,cAAL,GAAsB,IAAIE,IAAJ,CAAShB,IAAI,CAACc,cAAd,EAA8BG,WAA9B,EAAtB,GAAoE,IAAID,IAAJ,CAAShB,IAAI,CAACe,YAAd,EAA4BE,WAA5B;AAArG;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAKGjB,IAAI,CAACkB,iBAAL,iBACC;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,qBAAoClB,IAAI,CAACkB,iBAAzC,gBAAsElB,IAAI,CAACkB,iBAAL,KAA2B,CAA3B,IAAgC,GAAtG;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAQE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBACGZ;AADH;AAAA;AAAA;AAAA;AAAA,gBARF,eAWE;AAAA,kCAEA;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,IAAI,EAAEN;AAAhB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAMA;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGE,MAAM,CAACiB,IAAP,CAAY,IAAZ,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD;KA9DuBpB,Y","sourcesContent":["import React from \"react\";\r\nimport WatchBtn from \"../WatchBtn\";\r\nimport MyListBtn from \"../MyListBtn\";\r\nexport default function FeatureMovie({ item, windowWidth }) {\r\n\r\n  //Seleciona gêneros dos filmes\r\n  let genres = [];\r\n  for (let i in item.genres) {\r\n    genres.push(item.genres[i].name);\r\n  }\r\n\r\n\r\n  //Limite de 200 caracteres para descrição do filme\r\n  let description = item.overview;\r\n  if (description.length > 200) {\r\n    description = description.substring(0, 200) + '...';\r\n  }\r\n\r\n  return (\r\n    <section className=\"featured\" style={{\r\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n    }}>\r\n      <div className=\"featured__content flex\">\r\n        <h2 className=\"featured__title\">{item.name ? item.name : item.original_title}</h2>\r\n\r\n          <div className=\"featured__info\">\r\n            <div className=\"featured__points\">{item.vote_average} pontos</div>\r\n            {(item.first_air_date || item.release_date) &&\r\n              <div className=\"featured__year\">{item.first_air_date ? new Date(item.first_air_date).getFullYear() : new Date(item.release_date).getFullYear()}</div>\r\n            }\r\n            {item.number_of_seasons &&\r\n              <div className=\"featured__seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 && 's'}</div>\r\n            }\r\n            <div className=\"featured__synopsis\">\r\n              {description}\r\n            </div>\r\n            <div>\r\n\r\n            <div className=\"featured__btns\">\r\n              <WatchBtn item={item} />\r\n              <MyListBtn movie={item} />\r\n            </div>\r\n            <div className=\"featured__genres\">\r\n              <strong>Gêneros: </strong>\r\n              {genres.join(', ')}\r\n            </div>\r\n            </div>\r\n          </div>\r\n\r\n        {/* {windowWidth < 1024 &&\r\n          <div className=\"featured__info_mb\">\r\n            <div className=\"featured__genres\">\r\n              {genres.map((item, key) => (\r\n                <span key={key}>{item}</span>\r\n              ))}\r\n            </div>\r\n            <div className=\"featured__btns\">\r\n              <WatchBtn item={item} />\r\n              <MyListBtn movie={item} />\r\n            </div>\r\n          </div>\r\n        } */}\r\n      </div>\r\n    </section>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}