{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cliente\\\\Desktop\\\\ESTUDOS\\\\REACT\\\\PROJETOS\\\\Netflix\\\\netflix\\\\src\\\\pages\\\\Home\\\\SearchPage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Container from '../../../auxiliar/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchPage(_ref) {\n  _s();\n\n  let {\n    searchChange,\n    movieList,\n    setMovieInfo\n  } = _ref;\n  const [searchValue, setSearchValue] = useState(\"Lucifer\");\n  useEffect(() => {\n    setSearchValue(searchChange);\n  });\n\n  function searchMovies() {\n    let movies = [];\n    movieList.forEach(item => {\n      item.items.results.filter(value => {\n        if (searchValue === undefined) {\n          return value;\n        } else if (value.name && value.name.toLowerCase().includes(searchValue.toLowerCase())) {\n          return value;\n        } else if (value.title && value.title.toLowerCase().includes(searchValue.toLowerCase())) {\n          return value;\n        }\n      }).forEach(item => {\n        movies.push(item);\n      });\n    });\n    let filteredMovies = movies.filter(function (item, i) {\n      return movies.indexOf(item.name) === i.naame;\n    });\n    return filteredMovies;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"searchPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchPage__results--error\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"N\\xE3o encontramos resultados para \\\"\", searchValue, \"\\\".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sugest\\xF5es:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Tente palavras-chave diferentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Tente palavras-chave diferentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Tente palavras-chave diferentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"searchPage__title\",\n        children: [\"Procurar por: \\\"\", searchValue, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), searchValue && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"searchPage__results\",\n        children: searchMovies().map((item, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"myList__item\",\n          onClick: () => setMovieInfo(item),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w300${item.poster_path}`,\n            alt: item.name,\n            className: \"myList__img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchPage, \"qq3Et97sr4+CnNZdDHrCr8hN6Uo=\");\n\n_c = SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Users/Cliente/Desktop/ESTUDOS/REACT/PROJETOS/Netflix/netflix/src/pages/Home/SearchPage/index.js"],"names":["React","useState","useEffect","Container","SearchPage","searchChange","movieList","setMovieInfo","searchValue","setSearchValue","searchMovies","movies","forEach","item","items","results","filter","value","undefined","name","toLowerCase","includes","title","push","filteredMovies","i","indexOf","naame","map","key","poster_path"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Container from '../../../auxiliar/Container';\r\nexport default function SearchPage({ searchChange, movieList, setMovieInfo }) {\r\n\r\n  const [searchValue, setSearchValue] = useState(\"Lucifer\");\r\n\r\n  useEffect(() => {\r\n    setSearchValue(searchChange)\r\n  });\r\n\r\n  function searchMovies() {\r\n    let movies = []\r\n    movieList.forEach((item) => {\r\n      item.items.results.filter((value) => {\r\n        if (searchValue === undefined) {\r\n          return value\r\n        } else if (value.name && (value.name.toLowerCase().includes(searchValue.toLowerCase()))) {\r\n          return value\r\n\r\n        } else if (value.title && (value.title.toLowerCase().includes(searchValue.toLowerCase()))) {\r\n          return value\r\n        }\r\n      }).forEach((item) => {\r\n        movies.push(item)\r\n      })\r\n    })\r\n\r\n    let filteredMovies = movies.filter(function (item, i) {\r\n      return movies.indexOf(item.name) === i.naame;\r\n    });\r\n    return filteredMovies\r\n  }\r\n\r\n  return (\r\n    <section className='searchPage'>\r\n      <div className='searchPage__results--error'>\r\n        <p>Não encontramos resultados para \"{searchValue}\".</p>\r\n        <span>Sugestões:</span>\r\n        <ul>\r\n          <li>Tente palavras-chave diferentes</li>\r\n          <li>Tente palavras-chave diferentes</li>\r\n          <li>Tente palavras-chave diferentes</li>\r\n        </ul>\r\n      </div>\r\n      <Container>\r\n        <h2 className=\"searchPage__title\">Procurar por: \"{searchValue}\"</h2>\r\n        {searchValue &&\r\n          <ul className='searchPage__results'>\r\n            {searchMovies().map((item, key) => (\r\n              <li key={key} className=\"myList__item\" onClick={() => setMovieInfo(item)} >\r\n                <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.name} className=\"myList__img\" />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        }\r\n      </Container>\r\n    </section>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}