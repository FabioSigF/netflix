{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cliente\\\\Desktop\\\\ESTUDOS\\\\REACT\\\\PROJETOS\\\\Netflix\\\\netflix\\\\src\\\\pages\\\\Home\\\\SearchPage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Container from '../../../auxiliar/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchPage(_ref) {\n  _s();\n\n  let {\n    searchChange,\n    movieList,\n    setMovieInfo\n  } = _ref;\n  const [searchValue, setSearchValue] = useState(\"Lucifer\"); // useEffect(() => {\n  //   setSearchValue(searchChange)\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"searchPage\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"searchPage__title\",\n        children: [\"Procurar por: \\\"\", searchValue, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searcPage__results\",\n        children: movieList.map(item => {\n          item.items.results.filter(value => {\n            if (searchValue === undefined) {\n              return value;\n            } else if (value.name) {\n              let movieItem = '';\n\n              if (value.name.toLowerCase().includes(searchValue.toLowerCase())) {\n                movieItem = value;\n              }\n\n              return movieItem;\n            } else if (value.title) {\n              let movieItem = '';\n\n              if (value.title.toLowerCase().includes(searchValue.toLowerCase())) {\n                movieItem = value;\n              }\n\n              return movieItem;\n            }\n          }).map((item, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item.name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this));\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchPage, \"n15m+KzqQHGy+pTIO2+3dOZBxBI=\");\n\n_c = SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Users/Cliente/Desktop/ESTUDOS/REACT/PROJETOS/Netflix/netflix/src/pages/Home/SearchPage/index.js"],"names":["React","useState","useEffect","Container","SearchPage","searchChange","movieList","setMovieInfo","searchValue","setSearchValue","map","item","items","results","filter","value","undefined","name","movieItem","toLowerCase","includes","title","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AACA,eAAe,SAASC,UAAT,OAA+D;AAAA;;AAAA,MAA3C;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,GAA2C;AAE5E,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,SAAD,CAA9C,CAF4E,CAI5E;AACA;AACA;;AAEA,sBACE;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA,uCAAkDO,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACGF,SAAS,CAACI,GAAV,CAAeC,IAAD,IAAU;AACvBA,UAAAA,IAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB,CAA2BC,KAAD,IAAW;AACnC,gBAAGP,WAAW,KAAKQ,SAAnB,EAA+B;AAC7B,qBAAOD,KAAP;AACD,aAFD,MAEO,IAAIA,KAAK,CAACE,IAAV,EAAgB;AACrB,kBAAIC,SAAS,GAAG,EAAhB;;AACA,kBAAIH,KAAK,CAACE,IAAN,CAAWE,WAAX,GAAyBC,QAAzB,CAAkCZ,WAAW,CAACW,WAAZ,EAAlC,CAAJ,EAAkE;AAChED,gBAAAA,SAAS,GAAGH,KAAZ;AACD;;AACD,qBAAOG,SAAP;AACD,aANM,MAMA,IAAIH,KAAK,CAACM,KAAV,EAAiB;AACtB,kBAAIH,SAAS,GAAG,EAAhB;;AACA,kBAAIH,KAAK,CAACM,KAAN,CAAYF,WAAZ,GAA0BC,QAA1B,CAAmCZ,WAAW,CAACW,WAAZ,EAAnC,CAAJ,EAAmE;AACjED,gBAAAA,SAAS,GAAGH,KAAZ;AACD;;AACD,qBAAOG,SAAP;AACD;AACF,WAhBD,EAgBGR,GAhBH,CAgBO,CAACC,IAAD,EAAOW,GAAP,kBACL;AAAA,sBAAeX,IAAI,CAACM;AAApB,aAASK,GAAT;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAmBD,SApBA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAtCuBlB,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Container from '../../../auxiliar/Container';\r\nexport default function SearchPage({ searchChange, movieList, setMovieInfo }) {\r\n\r\n  const [searchValue, setSearchValue] = useState(\"Lucifer\");\r\n\r\n  // useEffect(() => {\r\n  //   setSearchValue(searchChange)\r\n  // });\r\n\r\n  return (\r\n    <section className='searchPage'>\r\n      <Container>\r\n        <h2 className=\"searchPage__title\">Procurar por: \"{searchValue}\"</h2>\r\n        <div className='searcPage__results'>\r\n          {movieList.map((item) => {\r\n            item.items.results.filter((value) => {\r\n              if(searchValue === undefined ) {\r\n                return value\r\n              } else if (value.name) {\r\n                let movieItem = ''\r\n                if (value.name.toLowerCase().includes(searchValue.toLowerCase())) {\r\n                  movieItem = value\r\n                }\r\n                return movieItem\r\n              } else if (value.title) {\r\n                let movieItem = ''\r\n                if (value.title.toLowerCase().includes(searchValue.toLowerCase())) {\r\n                  movieItem = value\r\n                }\r\n                return movieItem\r\n              }\r\n            }).map((item, key) => (\r\n              <li key={key}>{item.name}</li>\r\n            ))\r\n          })}\r\n        </div>\r\n      </Container>\r\n    </section>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}