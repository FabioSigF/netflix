{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cliente\\\\Desktop\\\\ESTUDOS\\\\REACT\\\\PROJETOS\\\\Netflix\\\\netflix\\\\src\\\\pages\\\\Home\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport FeatureMovie from \"../../components/FeatureMovie\";\nimport MovieRow from \"../../components/MovieRow\";\nimport Loading from \"../../layout/Loading\";\nimport Header from \"../../layout/Header\";\nimport MobileHeaderBottom from '../../layout/MobileHeader/MobileHeaderBottom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home(_ref) {\n  _s();\n\n  let {\n    windowWidth,\n    featureData,\n    movieList,\n    loggedUser\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const loadData = async () => {\n      await new Promise(r => setTimeout(r, 500));\n      setLoading(loading => !loading);\n    };\n\n    loadData();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        windowWidth: windowWidth,\n        movieList: movieList,\n        toggleAccount: toggleAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), featureData && /*#__PURE__*/_jsxDEV(FeatureMovie, {\n        item: featureData,\n        windowWidth: windowWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"lists\",\n        children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(MovieRow, {\n          title: item.title,\n          items: item.items\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Feito com dedica\\xE7\\xE3o por F\\xE1bio Signorini\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Direitos de imagem para Netflix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Dados utilizados do site Themoviedb.org\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), movieList.length <= 0 && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), windowWidth < 1200 && /*#__PURE__*/_jsxDEV(MobileHeaderBottom, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Home, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Cliente/Desktop/ESTUDOS/REACT/PROJETOS/Netflix/netflix/src/pages/Home/index.js"],"names":["React","useState","useEffect","FeatureMovie","MovieRow","Loading","Header","MobileHeaderBottom","Home","windowWidth","featureData","movieList","loggedUser","loading","setLoading","loadData","Promise","r","setTimeout","toggleAccount","map","item","key","title","items","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;;;AACA,eAAe,SAASC,IAAT,OAAmE;AAAA;;AAAA,MAArD;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA,SAA5B;AAAuCC,IAAAA;AAAvC,GAAqD;AAEhF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,QAAQ,GAAG,YAAY;AAE3B,YAAM,IAAIC,OAAJ,CAAaC,CAAD,IAAOC,UAAU,CAACD,CAAD,EAAI,GAAJ,CAA7B,CAAN;AACAH,MAAAA,UAAU,CAAED,OAAD,IAAa,CAACA,OAAf,CAAV;AACD,KAJD;;AAMAE,IAAAA,QAAQ;AACT,GARQ,EAQN,EARM,CAAT;;AAWA,MAAIF,OAAJ,EAAa;AACT,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAIK;AACL,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAEJ,WAArB;AAAkC,QAAA,SAAS,EAAEE,SAA7C;AAAwD,QAAA,aAAa,EAAEQ;AAAvE;AAAA;AAAA;AAAA;AAAA,cADF,EAEGT,WAAW,iBACV,QAAC,YAAD;AACE,QAAA,IAAI,EAAEA,WADR;AAEE,QAAA,WAAW,EAAED;AAFf;AAAA;AAAA;AAAA;AAAA,cAHJ,eASE;AAAS,QAAA,SAAS,EAAC,OAAnB;AAAA,kBACGE,SAAS,CAACS,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,kBACb,QAAC,QAAD;AAEE,UAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,UAAA,KAAK,EAAEF,IAAI,CAACG;AAHd,WACOF,GADP;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cATF,eAkBE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,EAwBGX,SAAS,CAACc,MAAV,IAAoB,CAApB,iBACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAzBJ,EA2BGhB,WAAW,GAAG,IAAd,iBACC,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA,oBADF;AAiCD;AACA;;GAtDuBD,I;;KAAAA,I","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport FeatureMovie from \"../../components/FeatureMovie\";\r\nimport MovieRow from \"../../components/MovieRow\";\r\nimport Loading from \"../../layout/Loading\";\r\nimport Header from \"../../layout/Header\";\r\nimport MobileHeaderBottom from '../../layout/MobileHeader/MobileHeaderBottom';\r\nexport default function Home({ windowWidth, featureData, movieList, loggedUser }) {\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n\r\n      await new Promise((r) => setTimeout(r, 500));\r\n      setLoading((loading) => !loading);\r\n    };\r\n      \r\n    loadData();\r\n  }, [])\r\n\r\n    \r\n  if (loading) {\r\n      return <Loading />\r\n  }\r\n\r\n  else {\r\n  return (\r\n    <>\r\n      <Header windowWidth={windowWidth} movieList={movieList} toggleAccount={toggleAccount}/>\r\n      {featureData &&\r\n        <FeatureMovie\r\n          item={featureData}\r\n          windowWidth={windowWidth}\r\n        />\r\n      }\r\n\r\n      <section className=\"lists\">\r\n        {movieList.map((item, key) => (\r\n          <MovieRow\r\n            key={key}\r\n            title={item.title}\r\n            items={item.items}\r\n          />\r\n        ))}\r\n      </section>\r\n      <footer className=\"footer\">\r\n        <p>Feito com dedicação por Fábio Signorini</p>\r\n        <p>Direitos de imagem para Netflix</p>\r\n        <p>Dados utilizados do site Themoviedb.org</p>\r\n      </footer>\r\n\r\n      {movieList.length <= 0 &&\r\n        <Loading />\r\n      }\r\n      {windowWidth < 1200 &&\r\n        <MobileHeaderBottom/>\r\n      }\r\n    </>\r\n  )\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}