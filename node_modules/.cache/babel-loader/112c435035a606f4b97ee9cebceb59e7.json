{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cliente\\\\Documents\\\\GitHub\\\\netflix\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'; //Components\n\nimport Home from './pages/Home';\nimport Tmdb from \"./Tmdb.js\";\nimport Accounts from \"./pages/Accounts\";\nimport Initial from \"./pages/Initial\";\nimport Login from \"./pages/Login\";\nimport NewClient from \"./pages/NewClient\";\nimport CreatePassword from \"./pages/NewClient/CreatePassword\";\nimport ConfigCard from \"./pages/NewClient/ConfigCard\";\nimport Congratulations from \"./pages/NewClient/Congratulations\";\nimport MyList from \"./pages/Home/MyList\";\nimport Browse from \"./pages/Home/Browse\";\nimport Footer from \"./layout/Footer\";\nimport SearchPage from \"./pages/Home/SearchPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth); //home\n\n  const [featureData, setFeatureData] = useState(null);\n  const [movieList, setMovieList] = useState([]); //serie\n\n  const [featureSerieData, setFeatureSerieData] = useState(null);\n  const [seriesList, setSeriesList] = useState([]); //filme\n\n  const [featureMovieData, setFeatureMovieData] = useState(null);\n  const [moviesList, setMoviesList] = useState([]); //kids\n\n  const [featureKidsData, setFeatureKidsData] = useState(null);\n  const [kidsList, setkidsList] = useState([]); //latest\n\n  const [latestList, setLatestList] = useState([]);\n  const [allList, setAllList] = useState([]);\n  const [searchChange, setSearchChange] = useState(); //Função para captar o tamanho da tela e enviar ao state\n\n  function handleResize() {\n    setWindowWidth(window.innerWidth);\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    const loadAll = async () => {\n      // Pegando a lista principal\n      let list = await Tmdb.getHomeList();\n      setMovieList(list); //Pegando o feature\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeatureData(chosenInfo); //Pegando lista de séries\n\n      let serieList = await Tmdb.getSeriesList();\n      setSeriesList(serieList); //Pegando o feature de séries\n\n      let actionSeries = serieList.filter(i => i.slug === 'action');\n      let randomChosenSeries = Math.floor(Math.random() * (actionSeries[0].items.results.length - 1));\n      console.log(actionSeries[0].items.results);\n      let chosenSeries = actionSeries[0].items.results[randomChosenSeries];\n      let chosenInfoSeries = await Tmdb.getMovieInfo(chosenSeries.id, 'tv');\n      setFeatureSerieData(chosenInfoSeries); //Pegando lista de filmes\n\n      let moviesList = await Tmdb.getMoviesList();\n      setMoviesList(moviesList); //Pegando o feature de filmes\n\n      let actionMovies = moviesList.filter(i => i.slug === 'action');\n      let randomChosenMovies = Math.floor(Math.random() * (actionMovies[0].items.results.length - 1));\n      console.log(actionMovies[0].items.results);\n      let chosenMovies = actionMovies[0].items.results[randomChosenMovies];\n      let chosenInfoMovies = await Tmdb.getMovieInfo(chosenMovies.id, 'movie');\n      setFeatureMovieData(chosenInfoMovies); //Pegando lista de filmes populares\n\n      let latestList = await Tmdb.getLatestList();\n      setLatestList(latestList); //Pegando lista de filmes\n\n      let allMovieList = await Tmdb.getAllList();\n      setAllList(allMovieList); //Pegando lista infantil\n\n      let kidsList = await Tmdb.getKidsList();\n      setKidsList(kidsList); //Pegando o feature infantil\n\n      let kidsMovies = infantilList.filter(i => i.slug === 'kids');\n      let randomChosenKids = Math.floor(Math.random() * (kidsMovies[0].items.results.length - 1));\n      console.log(kidsMovies[0].items.results);\n      let chosenKids = kidsMovies[0].items.results[randomChosenKids];\n      let chosenInfoKids = await Tmdb.getMovieInfo(chosenKids.id, 'movie');\n      setFeatureMovieData(chosenInfoKids);\n    };\n\n    loadAll();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  const users = [{\n    name: 'Fábio',\n    icon: 'user1',\n    link: '/home'\n  }, {\n    name: 'Felipe',\n    icon: 'user4',\n    link: '/home'\n  }, {\n    name: 'Silvana',\n    icon: 'user9',\n    link: '/home'\n  }, {\n    name: 'Isabella',\n    icon: 'user7',\n    link: '/home'\n  }];\n  const [loggedUser, setLoggedUser] = useState('user1');\n\n  function toggleAccount(e) {\n    const imgAccount = e.target.id;\n    imgAccount.length > 0 && setLoggedUser(imgAccount);\n  }\n\n  const [movieInfo, setMovieInfo] = useState('');\n\n  function openMoreInfo(item) {\n    setMovieInfo(item);\n    const movieInfo = document.querySelector('.movieInfo');\n    movieInfo.classList.add('open');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Initial, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/accounts\",\n        element: /*#__PURE__*/_jsxDEV(Accounts, {\n          users: users,\n          toggleAccount: toggleAccount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          windowWidth: windowWidth,\n          movieList: movieList,\n          movieInfo: movieInfo,\n          loggedUser: loggedUser,\n          users: users,\n          searchChange: setSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          path: \"browse\",\n          element: /*#__PURE__*/_jsxDEV(Browse, {\n            featureData: featureData,\n            windowWidth: windowWidth,\n            movieList: movieList,\n            openMoreInfo: openMoreInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"series\",\n          element: /*#__PURE__*/_jsxDEV(Browse, {\n            title: \"Séries\",\n            featureData: featureSerieData,\n            windowWidth: windowWidth,\n            movieList: seriesList,\n            openMoreInfo: openMoreInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"movies\",\n          element: /*#__PURE__*/_jsxDEV(Browse, {\n            title: \"Filmes\",\n            featureData: featureMovieData,\n            windowWidth: windowWidth,\n            movieList: moviesList,\n            openMoreInfo: openMoreInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"latest\",\n          element: /*#__PURE__*/_jsxDEV(Browse, {\n            windowWidth: windowWidth,\n            movieList: latestList,\n            openMoreInfo: openMoreInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"my-list\",\n          element: /*#__PURE__*/_jsxDEV(MyList, {\n            setMovieInfo: openMoreInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"search\",\n          element: /*#__PURE__*/_jsxDEV(SearchPage, {\n            movieList: allList,\n            searchChange: searchChange,\n            setMovieInfo: openMoreInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"new-client\",\n        element: /*#__PURE__*/_jsxDEV(NewClient, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 43\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(ConfigCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"config\",\n          element: /*#__PURE__*/_jsxDEV(ConfigCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"password\",\n          element: /*#__PURE__*/_jsxDEV(CreatePassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"congrat\",\n          element: /*#__PURE__*/_jsxDEV(Congratulations, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Q5aJjcM2/ImrInDEjZQ1SdaXdVU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Cliente/Documents/GitHub/netflix/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Home","Tmdb","Accounts","Initial","Login","NewClient","CreatePassword","ConfigCard","Congratulations","MyList","Browse","Footer","SearchPage","App","windowWidth","setWindowWidth","window","innerWidth","featureData","setFeatureData","movieList","setMovieList","featureSerieData","setFeatureSerieData","seriesList","setSeriesList","featureMovieData","setFeatureMovieData","moviesList","setMoviesList","featureKidsData","setFeatureKidsData","kidsList","setkidsList","latestList","setLatestList","allList","setAllList","searchChange","setSearchChange","handleResize","addEventListener","loadAll","list","getHomeList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","serieList","getSeriesList","actionSeries","randomChosenSeries","console","log","chosenSeries","chosenInfoSeries","getMoviesList","actionMovies","randomChosenMovies","chosenMovies","chosenInfoMovies","getLatestList","allMovieList","getAllList","getKidsList","setKidsList","kidsMovies","infantilList","randomChosenKids","chosenKids","chosenInfoKids","removeEventListener","users","name","icon","link","loggedUser","setLoggedUser","toggleAccount","e","imgAccount","target","movieInfo","setMovieInfo","openMoreInfo","item","document","querySelector","classList","add"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n//Components\nimport Home from './pages/Home'\nimport Tmdb from \"./Tmdb.js\";\nimport Accounts from \"./pages/Accounts\";\nimport Initial from \"./pages/Initial\";\nimport Login from \"./pages/Login\";\nimport NewClient from \"./pages/NewClient\";\nimport CreatePassword from \"./pages/NewClient/CreatePassword\";\nimport ConfigCard from \"./pages/NewClient/ConfigCard\";\nimport Congratulations from \"./pages/NewClient/Congratulations\";\nimport MyList from \"./pages/Home/MyList\";\nimport Browse from \"./pages/Home/Browse\";\nimport Footer from \"./layout/Footer\";\nimport SearchPage from \"./pages/Home/SearchPage\";\n\n\nexport default function App() {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  //home\n  const [featureData, setFeatureData] = useState(null);\n  const [movieList, setMovieList] = useState([]);\n  //serie\n  const [featureSerieData, setFeatureSerieData] = useState(null);\n  const [seriesList, setSeriesList] = useState([]);\n  //filme\n  const [featureMovieData, setFeatureMovieData] = useState(null);\n  const [moviesList, setMoviesList] = useState([]);\n  //kids\n  const [featureKidsData, setFeatureKidsData] = useState(null);\n  const [kidsList, setkidsList] = useState([]);\n  //latest\n  const [latestList, setLatestList] = useState([]);\n\n  const [allList, setAllList] = useState([]);\n\n  const [searchChange, setSearchChange] = useState();\n\n  //Função para captar o tamanho da tela e enviar ao state\n  function handleResize() {\n    setWindowWidth(window.innerWidth)\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    const loadAll = async () => {\n      // Pegando a lista principal\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando o feature\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\n      setFeatureData(chosenInfo);\n\n      //Pegando lista de séries\n      let serieList = await Tmdb.getSeriesList();\n      setSeriesList(serieList)\n\n      //Pegando o feature de séries\n      let actionSeries = serieList.filter(i => i.slug === 'action');\n      let randomChosenSeries = Math.floor(Math.random() * (actionSeries[0].items.results.length - 1));\n      console.log(actionSeries[0].items.results)\n      let chosenSeries = actionSeries[0].items.results[randomChosenSeries];\n      let chosenInfoSeries = await Tmdb.getMovieInfo(chosenSeries.id, 'tv')\n      setFeatureSerieData(chosenInfoSeries);\n\n      //Pegando lista de filmes\n      let moviesList = await Tmdb.getMoviesList();\n      setMoviesList(moviesList)\n\n      //Pegando o feature de filmes\n      let actionMovies = moviesList.filter(i => i.slug === 'action');\n      let randomChosenMovies = Math.floor(Math.random() * (actionMovies[0].items.results.length - 1));\n      console.log(actionMovies[0].items.results)\n      let chosenMovies = actionMovies[0].items.results[randomChosenMovies];\n      let chosenInfoMovies = await Tmdb.getMovieInfo(chosenMovies.id, 'movie')\n      setFeatureMovieData(chosenInfoMovies);\n\n      //Pegando lista de filmes populares\n      let latestList = await Tmdb.getLatestList();\n      setLatestList(latestList)\n\n      //Pegando lista de filmes\n      let allMovieList = await Tmdb.getAllList();\n      setAllList(allMovieList)\n\n      //Pegando lista infantil\n      let kidsList = await Tmdb.getKidsList();\n      setKidsList(kidsList)\n\n      //Pegando o feature infantil\n      let kidsMovies = infantilList.filter(i => i.slug === 'kids');\n      let randomChosenKids = Math.floor(Math.random() * (kidsMovies[0].items.results.length - 1));\n      console.log(kidsMovies[0].items.results)\n      let chosenKids = kidsMovies[0].items.results[randomChosenKids];\n      let chosenInfoKids = await Tmdb.getMovieInfo(chosenKids.id, 'movie')\n      setFeatureMovieData(chosenInfoKids);\n    }\n\n    loadAll();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const users = [\n    { name: 'Fábio', icon: 'user1', link: '/home' },\n    { name: 'Felipe', icon: 'user4', link: '/home' },\n    { name: 'Silvana', icon: 'user9', link: '/home' },\n    { name: 'Isabella', icon: 'user7', link: '/home' },\n  ]\n\n  const [loggedUser, setLoggedUser] = useState('user1')\n\n  function toggleAccount(e) {\n    const imgAccount = e.target.id;\n    imgAccount.length > 0 && setLoggedUser(imgAccount)\n  }\n\n  const [movieInfo, setMovieInfo] = useState('')\n  function openMoreInfo(item) {\n    setMovieInfo(item)\n    const movieInfo = document.querySelector('.movieInfo')\n    movieInfo.classList.add('open')\n  }\n\n  return (\n    <Router>\n\n      <Routes>\n\n        <Route index path=\"/\" element={<Initial />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/accounts\"\n          element={<Accounts users={users} toggleAccount={toggleAccount} />}\n        />\n        <Route path=\"home\"\n          element={\n            <Home\n              windowWidth={windowWidth}\n              movieList={movieList}\n              movieInfo={movieInfo}\n              loggedUser={loggedUser}\n              users={users}\n              searchChange={setSearchChange}\n            />}\n        >\n          <Route index path=\"browse\" element={<Browse\n            featureData={featureData}\n            windowWidth={windowWidth}\n            movieList={movieList}\n            openMoreInfo={openMoreInfo}\n          />} />\n          <Route path=\"series\" element={<Browse \n            title={\"Séries\"}\n            featureData={featureSerieData}\n            windowWidth={windowWidth}\n            movieList={seriesList}\n            openMoreInfo={openMoreInfo}\n            />} />\n          <Route path=\"movies\" element={<Browse \n            title={\"Filmes\"}\n            featureData={featureMovieData}\n            windowWidth={windowWidth}\n            movieList={moviesList}\n            openMoreInfo={openMoreInfo}\n            />} />\n          <Route path=\"latest\" element={<Browse \n            windowWidth={windowWidth}\n            movieList={latestList}\n            openMoreInfo={openMoreInfo}\n            />} />\n          <Route path=\"my-list\" element={<MyList setMovieInfo={openMoreInfo} />} />\n          <Route path=\"search\" element={<SearchPage movieList={allList} searchChange={searchChange} setMovieInfo={openMoreInfo} />} />\n        </Route>\n        <Route path=\"new-client\" element={<NewClient />}>\n          <Route index element={<ConfigCard />} />\n          <Route path=\"config\" element={<ConfigCard />} />\n          <Route path=\"password\" element={<CreatePassword />} />\n          <Route path=\"congrat\" element={<Congratulations />} />\n        </Route>\n      </Routes>\n      <Footer />\n    </Router>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}