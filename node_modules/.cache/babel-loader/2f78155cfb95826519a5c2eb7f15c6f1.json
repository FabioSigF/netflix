{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cliente\\\\Desktop\\\\ESTUDOS\\\\REACT\\\\PROJETOS\\\\Netflix\\\\netflix\\\\src\\\\pages\\\\Home\\\\SearchPage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Container from '../../../auxiliar/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchPage(_ref) {\n  _s();\n\n  let {\n    searchChange,\n    movieList,\n    setMovieInfo\n  } = _ref;\n  const [searchValue, setSearchValue] = useState(searchChange);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"searchPage\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"searchPage__title\",\n        children: [\"Procurar por: \\\"\", searchChange, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searcPage__results\",\n        children: movieList.map(item => {\n          item.results.filter(value => {\n            console.log(value);\n\n            if (searchChange === \"\") {\n              return value;\n            } else if (value.title.toLowerCase().includes(searchChange.toLowerCase())) {\n              return value;\n            }\n          }).map((item, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this));\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchPage, \"Ul2MRRbeTwXf3+gGyIY6zVTGsx4=\");\n\n_c = SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Users/Cliente/Desktop/ESTUDOS/REACT/PROJETOS/Netflix/netflix/src/pages/Home/SearchPage/index.js"],"names":["React","useState","Container","SearchPage","searchChange","movieList","setMovieInfo","searchValue","setSearchValue","map","item","results","filter","value","console","log","title","toLowerCase","includes","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AACA,eAAe,SAASC,UAAT,OAA+D;AAAA;;AAAA,MAA3C;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,GAA2C;AAE5E,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACG,YAAD,CAA9C;AAEA,sBACE;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA,uCAAkDA,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACGC,SAAS,CAACI,GAAV,CAAeC,IAAD,IAAU;AAEvBA,UAAAA,IAAI,CAACC,OAAL,CAAaC,MAAb,CAAqBC,KAAD,IAAW;AAC7BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,gBAAGT,YAAY,KAAK,EAApB,EAAwB;AACtB,qBAAOS,KAAP;AACD,aAFD,MAEO,IAAIA,KAAK,CAACG,KAAN,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCd,YAAY,CAACa,WAAb,EAAnC,CAAJ,EAAoE;AACzE,qBAAOJ,KAAP;AACD;AACF,WAPD,EAOGJ,GAPH,CAOO,CAACC,IAAD,EAAOS,GAAP,kBACL;AAAA,sBAAKT,IAAI,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,kBARF;AAUD,SAZA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA1BuBb,U;;KAAAA,U","sourcesContent":["import React, { useState } from 'react';\r\nimport Container from '../../../auxiliar/Container';\r\nexport default function SearchPage({ searchChange, movieList, setMovieInfo }) {\r\n\r\n  const [searchValue, setSearchValue] = useState(searchChange);\r\n\r\n  return (\r\n    <section className='searchPage'>\r\n      <Container>\r\n        <h2 className=\"searchPage__title\">Procurar por: \"{searchChange}\"</h2>\r\n        <div className='searcPage__results'>\r\n          {movieList.map((item) => {\r\n            \r\n            item.results.filter((value) => {\r\n              console.log(value)\r\n              if(searchChange === \"\") {\r\n                return value\r\n              } else if (value.title.toLowerCase().includes(searchChange.toLowerCase())) {\r\n                return value\r\n              }\r\n            }).map((item, key) => (\r\n              <li>{item.title}</li>\r\n            ))\r\n          })}\r\n        </div>\r\n      </Container>\r\n    </section>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}