{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cliente\\\\Desktop\\\\ESTUDOS\\\\REACT\\\\PROJETOS\\\\Netflix\\\\netflix\\\\src\\\\pages\\\\NewClient\\\\CreatePassword\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport InputForm from \"../../../components/InputForm\";\nimport LinkBtn from \"../../../components/LinkBtn\";\nimport Button from \"../../../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePassword() {\n  _s();\n\n  const initialInputValues = {\n    email: '',\n    password: ''\n  };\n  const [inputValues, setInputValues] = useState(initialInputValues);\n\n  function handleChange(e) {\n    setInputValues({ ...inputValues,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  const navigate = useNavigate();\n\n  function createNewClient(email, password) {\n    return fetch(`http://localhost:5000/clients`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(resp => {\n      if (resp.ok) {\n        navigate(\"/new-client\");\n        return resp.body;\n      }\n\n      throw new Error('Não foi possível criar um novo cliente');\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newClient__card flex flex_ai_c\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"newClient__step\",\n      children: [\"Passo \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 47\n      }, this), \" de \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 69\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"newClient__title\",\n      children: \"Crie uma senha para come\\xE7ar sua conta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newClient__text\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Apenas mais alguns passos e finalizamos!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"N\\xF3s tamb\\xE9m odiamos papelada.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newClient__form\",\n      onSubmit: () => createNewClient(inputValues.email, inputValues.password),\n      children: [/*#__PURE__*/_jsxDEV(InputForm, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: inputValues.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Senha\",\n        value: inputValues.password,\n        pattern: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?!.*[!@#$%^_=+-]).{6,12}$\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newClient__btn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          title: \"Next\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePassword, \"yy0zmMhwvdQPN++cDiCULF19lnU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreatePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePassword\");","map":{"version":3,"sources":["C:/Users/Cliente/Desktop/ESTUDOS/REACT/PROJETOS/Netflix/netflix/src/pages/NewClient/CreatePassword/index.js"],"names":["React","useState","useEffect","useNavigate","InputForm","LinkBtn","Button","CreatePassword","initialInputValues","email","password","inputValues","setInputValues","handleChange","e","target","name","value","navigate","createNewClient","fetch","method","headers","body","JSON","stringify","then","resp","ok","Error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport InputForm from \"../../../components/InputForm\";\r\nimport LinkBtn from \"../../../components/LinkBtn\";\r\nimport Button from \"../../../components/Button\";\r\n\r\nexport default function CreatePassword() {\r\n\r\n  const initialInputValues = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  const [inputValues, setInputValues] = useState(initialInputValues)\r\n\r\n  function handleChange(e) {\r\n    setInputValues({\r\n      ...inputValues,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const navigate = useNavigate()\r\n\r\n  function createNewClient(email, password){\r\n    return fetch(`http://localhost:5000/clients`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password\r\n      })\r\n    })\r\n    .then(resp => {\r\n      if(resp.ok){\r\n        navigate(\"/new-client\")\r\n        return resp.body\r\n      }\r\n      throw new Error('Não foi possível criar um novo cliente')\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"newClient__card flex flex_ai_c\">\r\n      <span className=\"newClient__step\">Passo <strong>2</strong> de <strong>3</strong></span>\r\n      <h2 className=\"newClient__title\">Crie uma senha para começar sua conta</h2>\r\n      <div className=\"newClient__text\">\r\n        <span>Apenas mais alguns passos e finalizamos!</span>\r\n        <span>Nós também odiamos papelada.</span>\r\n      </div>\r\n      <form className=\"newClient__form\" onSubmit={() => createNewClient(inputValues.email, inputValues.password)}>\r\n        <InputForm\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={inputValues.email}\r\n          onChange={handleChange}\r\n        />\r\n        <InputForm\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Senha\"\r\n          value={inputValues.password}\r\n          pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?!.*[!@#$%^_=+-]).{6,12}$\"\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"newClient__btn\">\r\n          <Button title=\"Next\" type=\"submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}