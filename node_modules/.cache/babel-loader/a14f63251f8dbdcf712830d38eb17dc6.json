{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cliente\\\\Desktop\\\\ESTUDOS\\\\REACT\\\\PROJETOS\\\\Netflix\\\\netflix\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './layout/Home';\nimport MainHeader from \"./components/MainHeader\";\nimport MobileHeader from \"./components/MobileHeader\";\nimport Tmdb from \"./Tmdb.js\";\nimport './Styles/main.css';\nimport ManageProfile from \"./layout/ManageProfile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [featureData, setFeatureData] = useState(null);\n  const [movieList, setMovieList] = useState([]);\n  const [navbar, setNavbar] = useState('');\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(window.innerWidth);\n      console.log();\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  useEffect(() => {\n    const loadAll = async () => {\n      // Pegando a lista Total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list); //Pegando o feature\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeatureData(chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n  useEffect(() => {\n    const Navbar = () => {\n      if (window.location.href.toString() === 'http://localhost:3000/') {\n        return;\n      }\n\n      if (windowWidth < 1200) {\n        return /*#__PURE__*/_jsxDEV(MobileHeader, {\n          categorias: movieList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }, this);\n      }\n    };\n\n    return Navbar();\n  });\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [Navbar(), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ManageProfile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          windowWidth: windowWidth,\n          movieList: movieList,\n          featureData: featureData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"ZKjCcwQvngUfzTOnqmTe4gyaD6w=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Cliente/Desktop/ESTUDOS/REACT/PROJETOS/Netflix/netflix/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Home","MainHeader","MobileHeader","Tmdb","ManageProfile","App","windowWidth","setWindowWidth","window","innerWidth","featureData","setFeatureData","movieList","setMovieList","navbar","setNavbar","handleResize","console","log","addEventListener","removeEventListener","loadAll","list","getHomeList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","Navbar","location","href","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,mBAAP;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAACc,MAAM,CAACC,UAAR,CAA9C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,aAASqB,YAAT,GAAwB;AACtBT,MAAAA,cAAc,CAACC,MAAM,CAACC,UAAR,CAAd;AACAQ,MAAAA,OAAO,CAACC,GAAR;AACD;;AAEDV,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC;AACA,WAAO,MAAMR,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCJ,YAArC,CAAb;AACD,GARQ,EAQN,EARM,CAAT;AAWArB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,OAAO,GAAG,YAAY;AAC1B;AACA,UAAIC,IAAI,GAAG,MAAMnB,IAAI,CAACoB,WAAL,EAAjB;AACAV,MAAAA,YAAY,CAACS,IAAD,CAAZ,CAH0B,CAK1B;;AACA,UAAIE,SAAS,GAAGF,IAAI,CAACG,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,WAA5B,CAAhB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,GAAoC,CAArD,CAAX,CAAnB;AACA,UAAIC,MAAM,GAAGX,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BL,YAA3B,CAAb;AACA,UAAIQ,UAAU,GAAG,MAAMjC,IAAI,CAACkC,YAAL,CAAkBF,MAAM,CAACG,EAAzB,EAA6B,IAA7B,CAAvB;AACA3B,MAAAA,cAAc,CAACyB,UAAD,CAAd;AACD,KAXD;;AAaAf,IAAAA,OAAO;AACR,GAfQ,EAeN,EAfM,CAAT;AAiBA1B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM4C,MAAM,GAAI,MAAM;AACpB,UAAI/B,MAAM,CAACgC,QAAP,CAAgBC,IAAhB,CAAqBC,QAArB,OAAoC,wBAAxC,EAAkE;AAChE;AACD;;AACD,UAAIpC,WAAW,GAAG,IAAlB,EAAwB;AACtB,4BAAO,QAAC,YAAD;AAAc,UAAA,UAAU,EAAEM;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KATD;;AAUA,WAAO2B,MAAM,EAAb;AACD,GAZQ,CAAT;AAcF,sBACE,QAAC,MAAD;AAAA,eACGA,MAAM,EADT,eAEE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,OAAO,eAAE,QAAC,IAAD;AAAM,UAAA,WAAW,EAAEjC,WAAnB;AAAgC,UAAA,SAAS,EAAEM,SAA3C;AAAsD,UAAA,WAAW,EAAEF;AAAnE;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWC;;GA5DuBL,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './layout/Home'\nimport MainHeader from \"./components/MainHeader\";\nimport MobileHeader from \"./components/MobileHeader\";\nimport Tmdb from \"./Tmdb.js\";\nimport './Styles/main.css'\nimport ManageProfile from \"./layout/ManageProfile\";\nexport default function App() {\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [featureData, setFeatureData] = useState(null);\n  const [movieList, setMovieList] = useState([]);\n  const [navbar, setNavbar] = useState('')\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(window.innerWidth)\n      console.log()\n    }\n    \n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n\n  useEffect(() => {\n    const loadAll = async () => {\n      // Pegando a lista Total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando o feature\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\n      setFeatureData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const Navbar =  () => {\n      if (window.location.href.toString() === 'http://localhost:3000/') {\n        return\n      }\n      if (windowWidth < 1200) {\n        return <MobileHeader categorias={movieList} />\n      } else {\n        return <MainHeader />\n      }\n    }\n    return Navbar()\n  })\n  \nreturn (\n  <Router>\n    {Navbar()}\n    <Routes>\n      <Route path=\"/\" element={<ManageProfile />} />\n      <Route path=\"/home\" element={<Home windowWidth={windowWidth} movieList={movieList} featureData={featureData}/>}\n      />\n    </Routes>\n\n  </Router>\n);\n}\n"]},"metadata":{},"sourceType":"module"}