{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cliente\\\\Desktop\\\\ESTUDOS\\\\REACT\\\\PROJETOS\\\\Netflix\\\\netflix\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'; //Components\n\nimport Home from './pages/Home';\nimport Tmdb from \"./Tmdb.js\";\nimport Accounts from \"./pages/Accounts\";\nimport Initial from \"./pages/Initial\";\nimport Login from \"./pages/Login\";\nimport NewClient from \"./pages/NewClient\";\nimport CreatePassword from \"./pages/NewClient/CreatePassword\";\nimport ConfigCard from \"./pages/NewClient/ConfigCard\";\nimport Congratulations from \"./pages/NewClient/Congratulations\";\nimport MyList from \"./pages/Home/MyList\";\nimport Browse from \"./pages/Home/Browse\";\nimport Footer from \"./layout/Footer\";\nimport SearchPage from \"./pages/Home/SearchPage\";\nimport Series from \"./pages/Home/Series\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth); //filme\n\n  const [featureData, setFeatureData] = useState(null);\n  const [movieList, setMovieList] = useState([]); //serie\n\n  const [featureSerieData, setFeatureSerieData] = useState(null);\n  const [seriesList, setSeriesList] = useState([]);\n  const [searchChange, setSearchChange] = useState(); //Função para captar o tamanho da tela e enviar ao state\n\n  function handleResize() {\n    setWindowWidth(window.innerWidth);\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    const loadAll = async () => {\n      // Pegando a lista principal\n      let list = await Tmdb.getHomeList();\n      setMovieList(list); //Pegando o feature\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeatureData(chosenInfo); //Pegando lista de séries\n\n      let serieList = await Tmdb.getSeriesList();\n      setSeriesList(serieList); //Pegando o feature de séries\n\n      let actionSeries = list.filter(i => i.slug === 'action');\n      let randomChosenSeries = Math.floor(Math.random() * (actionSeries[0].items.results.length - 1));\n      let chosenSeries = actionSeries[0].items.results[randomChosen];\n      let chosenInfoSeries = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeatureData(chosenInfoSeries);\n    };\n\n    loadAll();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  const users = [{\n    name: 'Fábio',\n    icon: 'user1',\n    link: '/home'\n  }, {\n    name: 'Felipe',\n    icon: 'user4',\n    link: '/home'\n  }, {\n    name: 'Silvana',\n    icon: 'user9',\n    link: '/home'\n  }, {\n    name: 'Isabella',\n    icon: 'user7',\n    link: '/home'\n  }];\n  const [loggedUser, setLoggedUser] = useState('user1');\n\n  function toggleAccount(e) {\n    const imgAccount = e.target.id;\n    imgAccount.length > 0 && setLoggedUser(imgAccount);\n  }\n\n  const [movieInfo, setMovieInfo] = useState('');\n\n  function openMoreInfo(item) {\n    setMovieInfo(item);\n    const movieInfo = document.querySelector('.movieInfo');\n    movieInfo.classList.add('open');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Initial, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/accounts\",\n        element: /*#__PURE__*/_jsxDEV(Accounts, {\n          users: users,\n          toggleAccount: toggleAccount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          windowWidth: windowWidth,\n          movieList: movieList,\n          movieInfo: movieInfo,\n          loggedUser: loggedUser,\n          users: users,\n          searchChange: setSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Browse, {\n            featureData: featureData,\n            windowWidth: windowWidth,\n            movieList: movieList,\n            openMoreInfo: openMoreInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"my-list\",\n          element: /*#__PURE__*/_jsxDEV(MyList, {\n            setMovieInfo: openMoreInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"search\",\n          element: /*#__PURE__*/_jsxDEV(SearchPage, {\n            movieList: movieList,\n            searchChange: searchChange,\n            setMovieInfo: openMoreInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"series\",\n          element: /*#__PURE__*/_jsxDEV(Series, {\n            featureData: featureData,\n            windowWidth: windowWidth,\n            seriesList: seriesList,\n            openMoreInfo: openMoreInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"new-client\",\n        element: /*#__PURE__*/_jsxDEV(NewClient, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 43\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(ConfigCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"config\",\n          element: /*#__PURE__*/_jsxDEV(ConfigCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"password\",\n          element: /*#__PURE__*/_jsxDEV(CreatePassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"congrat\",\n          element: /*#__PURE__*/_jsxDEV(Congratulations, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VO7+F+zdv+3uOidceUciI91cteY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Cliente/Desktop/ESTUDOS/REACT/PROJETOS/Netflix/netflix/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Home","Tmdb","Accounts","Initial","Login","NewClient","CreatePassword","ConfigCard","Congratulations","MyList","Browse","Footer","SearchPage","Series","App","windowWidth","setWindowWidth","window","innerWidth","featureData","setFeatureData","movieList","setMovieList","featureSerieData","setFeatureSerieData","seriesList","setSeriesList","searchChange","setSearchChange","handleResize","addEventListener","loadAll","list","getHomeList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","serieList","getSeriesList","actionSeries","randomChosenSeries","chosenSeries","chosenInfoSeries","removeEventListener","users","name","icon","link","loggedUser","setLoggedUser","toggleAccount","e","imgAccount","target","movieInfo","setMovieInfo","openMoreInfo","item","document","querySelector","classList","add"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n//Components\nimport Home from './pages/Home'\nimport Tmdb from \"./Tmdb.js\";\nimport Accounts from \"./pages/Accounts\";\nimport Initial from \"./pages/Initial\";\nimport Login from \"./pages/Login\";\nimport NewClient from \"./pages/NewClient\";\nimport CreatePassword from \"./pages/NewClient/CreatePassword\";\nimport ConfigCard from \"./pages/NewClient/ConfigCard\";\nimport Congratulations from \"./pages/NewClient/Congratulations\";\nimport MyList from \"./pages/Home/MyList\";\nimport Browse from \"./pages/Home/Browse\";\nimport Footer from \"./layout/Footer\";\nimport SearchPage from \"./pages/Home/SearchPage\";\nimport Series from \"./pages/Home/Series\";\n\n\nexport default function App() {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  //filme\n  const [featureData, setFeatureData] = useState(null);\n  const [movieList, setMovieList] = useState([]);\n  //serie\n  const [featureSerieData, setFeatureSerieData] = useState(null);\n  const [seriesList, setSeriesList] = useState([]);\n\n  const [searchChange, setSearchChange] = useState();\n\n  //Função para captar o tamanho da tela e enviar ao state\n  function handleResize() {\n    setWindowWidth(window.innerWidth)\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    const loadAll = async () => {\n      // Pegando a lista principal\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando o feature\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\n      setFeatureData(chosenInfo);\n\n      //Pegando lista de séries\n      let serieList = await Tmdb.getSeriesList();\n      setSeriesList(serieList)\n\n      //Pegando o feature de séries\n      let actionSeries = list.filter(i => i.slug === 'action');\n      let randomChosenSeries = Math.floor(Math.random() * (actionSeries[0].items.results.length - 1));\n      let chosenSeries = actionSeries[0].items.results[randomChosen];\n      let chosenInfoSeries = await Tmdb.getMovieInfo(chosen.id, 'tv')\n      setFeatureData(chosenInfoSeries);\n    }\n\n    loadAll();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const users = [\n    { name: 'Fábio', icon: 'user1', link: '/home' },\n    { name: 'Felipe', icon: 'user4', link: '/home' },\n    { name: 'Silvana', icon: 'user9', link: '/home' },\n    { name: 'Isabella', icon: 'user7', link: '/home' },\n  ]\n\n  const [loggedUser, setLoggedUser] = useState('user1')\n\n  function toggleAccount(e) {\n    const imgAccount = e.target.id;\n    imgAccount.length > 0 && setLoggedUser(imgAccount)\n  }\n\n  const [movieInfo, setMovieInfo] = useState('')\n  function openMoreInfo(item) {\n    setMovieInfo(item)\n    const movieInfo = document.querySelector('.movieInfo')\n    movieInfo.classList.add('open')\n  }\n\n  return (\n    <Router>\n\n      <Routes>\n\n        <Route index path=\"/\" element={<Initial />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/accounts\"\n          element={<Accounts users={users} toggleAccount={toggleAccount} />}\n        />\n        <Route path=\"home\"\n          element={\n            <Home\n              windowWidth={windowWidth}\n              movieList={movieList}\n              movieInfo={movieInfo}\n              loggedUser={loggedUser}\n              users={users}\n              searchChange={setSearchChange}\n            />}\n        >\n          <Route index element={<Browse\n            featureData={featureData}\n            windowWidth={windowWidth}\n            movieList={movieList}\n            openMoreInfo={openMoreInfo}\n          />} />\n          <Route path=\"my-list\" element={<MyList setMovieInfo={openMoreInfo} />} />\n          <Route path=\"search\" element={<SearchPage movieList={movieList} searchChange={searchChange} setMovieInfo={openMoreInfo} />} />\n          <Route path=\"series\" element={<Series \n            featureData={featureData}\n            windowWidth={windowWidth}\n            seriesList={seriesList}\n            openMoreInfo={openMoreInfo}\n            />} />\n        </Route>\n        <Route path=\"new-client\" element={<NewClient />}>\n          <Route index element={<ConfigCard />} />\n          <Route path=\"config\" element={<ConfigCard />} />\n          <Route path=\"password\" element={<CreatePassword />} />\n          <Route path=\"congrat\" element={<Congratulations />} />\n        </Route>\n      </Routes>\n      <Footer />\n    </Router>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}