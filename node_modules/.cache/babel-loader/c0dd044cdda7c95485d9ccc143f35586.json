{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cliente\\\\Desktop\\\\ESTUDOS\\\\REACT\\\\PROJETOS\\\\Netflix\\\\netflix\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Tmdb from \"./Tmdb.js\";\nimport FeatureMovie from \"./components/FeatureMovie.js\";\nimport MovieRow from \"./components/MovieRow.js\";\nimport Header from \"./components/Header.js\";\nimport \"./Styles/main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n  const [featureData, setFeatureData] = useState(null); //Pegando items\n\n  function pegaItems(movieList) {\n    const items = [];\n    movieList.forEach(item => {\n      if (item.post_path !== null) {\n        items.push(item);\n      }\n    });\n    return items;\n  }\n\n  useEffect(() => {\n    const loadAll = async () => {\n      // Pegando a lista Total\n      let list = await Tmdb.getHomeList();\n      console.log(list);\n      setMovieList(list); //Pegando o feature\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeatureData(chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), featureData && /*#__PURE__*/_jsxDEV(FeatureMovie, {\n      item: featureData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(MovieRow, {\n        title: item.title,\n        items: pegaItems\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Feito com dedica\\xE7\\xE3o por F\\xE1bio Signorini\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Direitos de imagem para Netflix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Dados utilizados do site Themoviedb.org\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8qL0qSgMvkjer2zt/+yOSM7VpIk=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Cliente/Desktop/ESTUDOS/REACT/PROJETOS/Netflix/netflix/src/App.js"],"names":["React","useEffect","useState","Tmdb","FeatureMovie","MovieRow","Header","App","movieList","setMovieList","featureData","setFeatureData","pegaItems","items","forEach","item","post_path","push","loadAll","list","getHomeList","console","log","originals","filter","i","slug","randomChosen","Math","floor","random","results","length","chosen","chosenInfo","getMovieInfo","id","map","key","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,mBAAP;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C,CAH4B,CAM5B;;AACA,WAASU,SAAT,CAAmBJ,SAAnB,EAA8B;AAC5B,UAAMK,KAAK,GAAG,EAAd;AACAL,IAAAA,SAAS,CAACM,OAAV,CAAmBC,IAAD,IAAU;AAC1B,UAAIA,IAAI,CAACC,SAAL,KAAmB,IAAvB,EAA6B;AAC3BH,QAAAA,KAAK,CAACI,IAAN,CAAWF,IAAX;AACD;AACF,KAJD;AAKA,WAAOF,KAAP;AACD;;AAEDZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,OAAO,GAAG,YAAY;AAC1B;AACA,UAAIC,IAAI,GAAG,MAAMhB,IAAI,CAACiB,WAAL,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAV,MAAAA,YAAY,CAACU,IAAD,CAAZ,CAJ0B,CAM1B;;AACA,UAAII,SAAS,GAAGJ,IAAI,CAACK,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,WAA5B,CAAhB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,SAAS,CAAC,CAAD,CAAT,CAAaV,KAAb,CAAmBkB,OAAnB,CAA2BC,MAA3B,GAAoC,CAArD,CAAX,CAAnB;AACA,UAAIC,MAAM,GAAGV,SAAS,CAAC,CAAD,CAAT,CAAaV,KAAb,CAAmBkB,OAAnB,CAA2BJ,YAA3B,CAAb;AACA,UAAIO,UAAU,GAAG,MAAM/B,IAAI,CAACgC,YAAL,CAAkBF,MAAM,CAACG,EAAzB,EAA6B,IAA7B,CAAvB;AACAzB,MAAAA,cAAc,CAACuB,UAAD,CAAd;AACD,KAZD;;AAcAhB,IAAAA,OAAO;AACR,GAhBQ,EAgBN,EAhBM,CAAT;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAGGR,WAAW,iBACV,QAAC,YAAD;AACE,MAAA,IAAI,EAAEA;AADR;AAAA;AAAA;AAAA;AAAA,YAJJ,eASE;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,gBACGF,SAAS,CAAC6B,GAAV,CAAc,CAACtB,IAAD,EAAOuB,GAAP,kBACb,QAAC,QAAD;AAEE,QAAA,KAAK,EAAEvB,IAAI,CAACwB,KAFd;AAGE,QAAA,KAAK,EAAE3B;AAHT,SACO0B,GADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YATF,eAkBE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA5DuB/B,G;;KAAAA,G","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Tmdb from \"./Tmdb.js\";\nimport FeatureMovie from \"./components/FeatureMovie.js\";\nimport MovieRow from \"./components/MovieRow.js\";\nimport Header from \"./components/Header.js\";\nimport \"./Styles/main.css\";\nexport default function App() {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featureData, setFeatureData] = useState(null);\n\n\n  //Pegando items\n  function pegaItems(movieList) {\n    const items = [];\n    movieList.forEach((item) => {\n      if (item.post_path !== null) {\n        items.push(item)\n      }\n    })\n    return items\n  }\n\n  useEffect(() => {\n    const loadAll = async () => {\n      // Pegando a lista Total\n      let list = await Tmdb.getHomeList();\n      console.log(list)\n      setMovieList(list);\n\n      //Pegando o feature\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\n      setFeatureData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n  return (\n    <div className=\"page\">\n      <Header />\n\n      {featureData &&\n        <FeatureMovie\n          item={featureData}\n        />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow\n            key={key}\n            title={item.title}\n            items={pegaItems}\n          />\n        ))}\n      </section>\n      <footer className=\"footer\">\n        <p>Feito com dedicação por Fábio Signorini</p>\n        <p>Direitos de imagem para Netflix</p>\n        <p>Dados utilizados do site Themoviedb.org</p>\n      </footer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}