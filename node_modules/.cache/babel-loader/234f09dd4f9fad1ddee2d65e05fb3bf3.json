{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cliente\\\\Desktop\\\\ESTUDOS\\\\REACT\\\\PROJETOS\\\\Netflix\\\\netflix\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './layout/Home';\nimport Tmdb from \"./Tmdb.js\";\nimport './Styles/main.css';\nimport ManageProfile from \"./layout/ManageProfile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleWWChange = this.state = {\n      windowWidth: window.innerWidth,\n      featureData: null,\n      movieList: []\n    };\n  }\n\n  componentDidMount() {\n    function handleResize() {\n      setWindowWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n\n    const loadAll = async () => {\n      // Pegando a lista Total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list); //Pegando o feature\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeatureData(chosenInfo);\n    };\n\n    loadAll();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ManageProfile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            windowWidth: windowWidth,\n            movieList: movieList,\n            featureData: featureData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Cliente/Desktop/ESTUDOS/REACT/PROJETOS/Netflix/netflix/src/App.js"],"names":["React","BrowserRouter","Router","Routes","Route","Home","Tmdb","ManageProfile","App","Component","constructor","props","handleWWChange","state","windowWidth","window","innerWidth","featureData","movieList","componentDidMount","handleResize","setWindowWidth","addEventListener","removeEventListener","loadAll","list","getHomeList","setMovieList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","setFeatureData","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,mBAAP;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;AAEA,eAAe,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GACA,KAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAEC,MAAM,CAACC,UADT;AAEXC,MAAAA,WAAW,EAAE,IAFF;AAGXC,MAAAA,SAAS,EAAE;AAHA,KADb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,aAASC,YAAT,GAAwB;AACtBC,MAAAA,cAAc,CAACN,MAAM,CAACC,UAAR,CAAd;AACD;;AACDD,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCF,YAAlC;AACA,WAAO,MAAML,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCH,YAArC,CAAb;;AAEA,UAAMI,OAAO,GAAG,YAAY;AAC1B;AACA,UAAIC,IAAI,GAAG,MAAMnB,IAAI,CAACoB,WAAL,EAAjB;AACAC,MAAAA,YAAY,CAACF,IAAD,CAAZ,CAH0B,CAK1B;;AACA,UAAIG,SAAS,GAAGH,IAAI,CAACI,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,WAA5B,CAAhB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,GAAoC,CAArD,CAAX,CAAnB;AACA,UAAIC,MAAM,GAAGX,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BL,YAA3B,CAAb;AACA,UAAIQ,UAAU,GAAG,MAAMlC,IAAI,CAACmC,YAAL,CAAkBF,MAAM,CAACG,EAAzB,EAA6B,IAA7B,CAAvB;AACAC,MAAAA,cAAc,CAACH,UAAD,CAAd;AACD,KAXD;;AAaAhB,IAAAA,OAAO;AAER;;AACDoB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAM,YAAA,WAAW,EAAE9B,WAAnB;AAAgC,YAAA,SAAS,EAAEI,SAA3C;AAAsD,YAAA,WAAW,EAAED;AAAnE;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA7C8C","sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Home from './layout/Home'\r\nimport Tmdb from \"./Tmdb.js\";\r\nimport './Styles/main.css'\r\nimport ManageProfile from \"./layout/ManageProfile\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleWWChange = \r\n    this.state = {\r\n      windowWidth: window.innerWidth,\r\n      featureData: null,\r\n      movieList: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    function handleResize() {\r\n      setWindowWidth(window.innerWidth)\r\n    }\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n\r\n    const loadAll = async () => {\r\n      // Pegando a lista Total\r\n      let list = await Tmdb.getHomeList();\r\n      setMovieList(list);\r\n\r\n      //Pegando o feature\r\n      let originals = list.filter(i => i.slug === 'originals');\r\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\r\n      let chosen = originals[0].items.results[randomChosen];\r\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\r\n      setFeatureData(chosenInfo);\r\n    }\r\n\r\n    loadAll();\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<ManageProfile />} />\r\n          <Route path=\"/home\" element={<Home windowWidth={windowWidth} movieList={movieList} featureData={featureData} />}\r\n          />\r\n        </Routes>\r\n\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}